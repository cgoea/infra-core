// SPDX-FileCopyrightText: (C) 2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package tenant.v1;

import "buf/validate/validate.proto";
import "ent/opts.proto";
import "infrainv/infrainv.proto";

option go_package = "github.com/open-edge-platform/infra-core/inventory/v2/pkg/api/tenant/v1;tenantv1";

message Tenant {
  option (ent.schema) = {gen: true};
  option (infrainv.schemaExtension) = {
    indexes: [
      {
        unique: false
        fields: ["tenant_id"]
      }
    ]
  };

  // resource identifier
  string resource_id = 1 [
    (ent.field) = {unique: true},
    (buf.validate.field).string = {
      pattern: "^tenant-[0-9a-f]{8}$"
      max_bytes: 19
    },
    (buf.validate.field).ignore = IGNORE_IF_UNPOPULATED
  ];

  // Expresses current state of tenant.
  TenantState current_state = 2 [(ent.field) = {optional: true}];

  // Expresses desired state of tenant.
  TenantState desired_state = 3 [(ent.field) = {optional: false}];

  // --------------------------------------------------------------------------------
  // watcher* boolean fields, corresponds to all
  // resource managers in Infra that need to synchronized on Tenant create/delete.
  // Written to by each of those resource managers. Default value is false, set
  // to true when the resource manager has completed create actions, and false
  // when resource manager has completed delete actions.

  // state of tenant initialization on osmanager side
  bool watcher_osmanager = 4 [(ent.field) = {optional: true}];
  // --------------------------------------------------------------------------------

  string tenant_id = 100 [
    (ent.field) = {
      unique: true
      immutable: true
      optional: false
    },
    (buf.validate.field).string = {
      uuid: true
      max_bytes: 36
    },
    (buf.validate.field).ignore = IGNORE_IF_UNPOPULATED
  ]; // Tenant Identifier

  string created_at = 200 [(ent.field) = {
    immutable: true
    optional: false
    schema_type: [
      {
        key: "postgres"
        value: "TIMESTAMP"
      }
    ]
  }]; // Creation timestamp

  string updated_at = 201 [(ent.field) = {
    // The field immutable from API perspective, will be changed internally in the hooks.
    immutable: false
    optional: false
    schema_type: [
      {
        key: "postgres"
        value: "TIMESTAMP"
      }
    ]
  }]; // Update timestamp
}

// An Enum with the states defined by the Multi-tenant framework
enum TenantState {
  TENANT_STATE_UNSPECIFIED = 0;
  TENANT_STATE_CREATED = 1;
  TENANT_STATE_DELETED = 2;
}
