// SPDX-FileCopyrightText: (C) 2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go-filters, DO NOT EDIT.

package store

import (
	"github.com/open-edge-platform/infra-core/inventory/v2/internal/ent/singlescheduleresource"
	inv_v1 "github.com/open-edge-platform/infra-core/inventory/v2/pkg/api/inventory/v1"
)

func (r *registry) RegisterSingleScheduleResource() {
	r.Register(
		newResourceTranspiler(
			inv_v1.ResourceKind_RESOURCE_KIND_SINGLESCHEDULE,
			singlescheduleresource.ValidColumn,
			map[string]edgeHandler{
				singlescheduleresource.EdgeTargetHost: {
					func(p sqlPredicate) sqlPredicate { return singlescheduleresource.HasTargetHostWith(p) },
					inv_v1.ResourceKind_RESOURCE_KIND_HOST,
				},

				singlescheduleresource.EdgeTargetRegion: {
					func(p sqlPredicate) sqlPredicate { return singlescheduleresource.HasTargetRegionWith(p) },
					inv_v1.ResourceKind_RESOURCE_KIND_REGION,
				},

				singlescheduleresource.EdgeTargetSite: {
					func(p sqlPredicate) sqlPredicate { return singlescheduleresource.HasTargetSiteWith(p) },
					inv_v1.ResourceKind_RESOURCE_KIND_SITE,
				},

				singlescheduleresource.EdgeTargetWorkload: {
					func(p sqlPredicate) sqlPredicate { return singlescheduleresource.HasTargetWorkloadWith(p) },
					inv_v1.ResourceKind_RESOURCE_KIND_WORKLOAD,
				},
			},
			map[string]sqlPredicate{
				singlescheduleresource.EdgeTargetHost:     singlescheduleresource.HasTargetHost(),
				singlescheduleresource.EdgeTargetRegion:   singlescheduleresource.HasTargetRegion(),
				singlescheduleresource.EdgeTargetSite:     singlescheduleresource.HasTargetSite(),
				singlescheduleresource.EdgeTargetWorkload: singlescheduleresource.HasTargetWorkload(),
			},
		))

}
