// SPDX-FileCopyrightText: (C) 2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go-filters, DO NOT EDIT.

package store

import (
	"github.com/open-edge-platform/infra-core/inventory/v2/internal/ent/repeatedscheduleresource"
	inv_v1 "github.com/open-edge-platform/infra-core/inventory/v2/pkg/api/inventory/v1"
)

func (r *registry) RegisterRepeatedScheduleResource() {
	r.Register(
		newResourceTranspiler(
			inv_v1.ResourceKind_RESOURCE_KIND_REPEATEDSCHEDULE,
			repeatedscheduleresource.ValidColumn,
			map[string]edgeHandler{
				repeatedscheduleresource.EdgeTargetHost: {
					func(p sqlPredicate) sqlPredicate { return repeatedscheduleresource.HasTargetHostWith(p) },
					inv_v1.ResourceKind_RESOURCE_KIND_HOST,
				},

				repeatedscheduleresource.EdgeTargetRegion: {
					func(p sqlPredicate) sqlPredicate { return repeatedscheduleresource.HasTargetRegionWith(p) },
					inv_v1.ResourceKind_RESOURCE_KIND_REGION,
				},

				repeatedscheduleresource.EdgeTargetSite: {
					func(p sqlPredicate) sqlPredicate { return repeatedscheduleresource.HasTargetSiteWith(p) },
					inv_v1.ResourceKind_RESOURCE_KIND_SITE,
				},

				repeatedscheduleresource.EdgeTargetWorkload: {
					func(p sqlPredicate) sqlPredicate { return repeatedscheduleresource.HasTargetWorkloadWith(p) },
					inv_v1.ResourceKind_RESOURCE_KIND_WORKLOAD,
				},
			},
			map[string]sqlPredicate{
				repeatedscheduleresource.EdgeTargetHost:     repeatedscheduleresource.HasTargetHost(),
				repeatedscheduleresource.EdgeTargetRegion:   repeatedscheduleresource.HasTargetRegion(),
				repeatedscheduleresource.EdgeTargetSite:     repeatedscheduleresource.HasTargetSite(),
				repeatedscheduleresource.EdgeTargetWorkload: repeatedscheduleresource.HasTargetWorkload(),
			},
		))

}
