// SPDX-FileCopyrightText: (C) 2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go-filters, DO NOT EDIT.

package store

import (
	"github.com/open-edge-platform/infra-core/inventory/v2/internal/ent/telemetryprofile"
	inv_v1 "github.com/open-edge-platform/infra-core/inventory/v2/pkg/api/inventory/v1"
)

func (r *registry) RegisterTelemetryProfile() {
	r.Register(
		newResourceTranspiler(
			inv_v1.ResourceKind_RESOURCE_KIND_TELEMETRY_PROFILE,
			telemetryprofile.ValidColumn,
			map[string]edgeHandler{
				telemetryprofile.EdgeGroup: {
					func(p sqlPredicate) sqlPredicate { return telemetryprofile.HasGroupWith(p) },
					inv_v1.ResourceKind_RESOURCE_KIND_TELEMETRY_GROUP,
				},

				telemetryprofile.EdgeInstance: {
					func(p sqlPredicate) sqlPredicate { return telemetryprofile.HasInstanceWith(p) },
					inv_v1.ResourceKind_RESOURCE_KIND_INSTANCE,
				},

				telemetryprofile.EdgeRegion: {
					func(p sqlPredicate) sqlPredicate { return telemetryprofile.HasRegionWith(p) },
					inv_v1.ResourceKind_RESOURCE_KIND_REGION,
				},

				telemetryprofile.EdgeSite: {
					func(p sqlPredicate) sqlPredicate { return telemetryprofile.HasSiteWith(p) },
					inv_v1.ResourceKind_RESOURCE_KIND_SITE,
				},
			},
			map[string]sqlPredicate{
				telemetryprofile.EdgeGroup:    telemetryprofile.HasGroup(),
				telemetryprofile.EdgeInstance: telemetryprofile.HasInstance(),
				telemetryprofile.EdgeRegion:   telemetryprofile.HasRegion(),
				telemetryprofile.EdgeSite:     telemetryprofile.HasSite(),
			},
		))

}
