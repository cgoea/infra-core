---
# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

regions:
  get:
    description: "Gets all region objects."
    parameters:
      - in: query
        name: offset
        schema:
          default: 0
          type: integer
          minimum: 0
          maximum: 10000
        description: "Index of the first item to return. This allows skipping of items."
      - in: query
        name: pageSize
        schema:
          default: 20
          type: integer
          minimum: 1
          maximum: 100
        description: "Defines the amount of items
          to be contained in a single page,
          min of 1 and max of 100, default of 20."
      - in: query
        name: filter
        schema:
          type: string
          pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}\"' ]+$
        description: "Optional filter to return only items of interest.
          See https://google.aip.dev/160 for details."
        examples:
          example1:
            value: 'parentRegion.resourceId="region-3b382a11"'
            summary: "Through the region's parent region ID."
          example2:
            value: 'name="region name example"'
            summary: "Through the region name."
          example3:
            value: "metadata='{\"key\":\"exampleKey\",\"value\":\"exampleValue\"}'"
            summary: "Through the metadata."
      - in: query
        name: orderBy
        schema:
          type: string
          pattern: '^$|^[a-zA-Z-_0-9., ]+$'
        description: "Optional comma-separated list of fields to specify a sorting order.
          See https://google.aip.dev/132 for details."
      - in: query
        name: parent
        deprecated: true
        schema:
          type: string
          pattern: "^region-[0-9a-f]{8}$|^null$"
        description: "The parent region ID that the region belongs to.
          If not specified, returns all regions.
          If specified, returns the regions that have the specified
          parent applied to them. If null, returns all the regions
          without a parent."
      - in: query
        name: showTotalSites
        description: "Indicates if the region identified by the filter needs
          to be returned with the field totalSites filled."
        schema:
          type: boolean
    tags:
      - Region
    responses:
      200:
        description: "Array of all region objects."
        content:
          application/json:
            schema:
              "$ref": "../schemas/_index.yaml#/RegionsList"
      401:
        $ref: "../responses/_index.yaml#/401-Unauthorized"
      403:
        $ref: "../responses/_index.yaml#/403-Forbidden"
      429:
        "$ref": "../responses/_index.yaml#/429-TooManyRequests"
      503:
        "$ref": "../responses/_index.yaml#/503-ServiceUnavailable"
      500:
        "$ref": "../responses/_index.yaml#/500-InternalServerError"
      501:
        "$ref": "../responses/_index.yaml#/501-Unimplemented"
  post:
    description: "Creates a region."
    tags:
      - Region
    requestBody:
      required: true
      content:
        application/json:
          schema:
            "$ref": "../schemas/_index.yaml#/Region"
    responses:
      201:
        description: "The region was created."
        content:
          application/json:
            schema:
              "$ref": "../schemas/_index.yaml#/Region"
        headers:
          Location:
            description: "Contains the URI of the created region."
            required: true
            schema:
              type: string
      400:
        "$ref": "../responses/_index.yaml#/400-BadRequest"
      401:
        $ref: "../responses/_index.yaml#/401-Unauthorized"
      403:
        $ref: "../responses/_index.yaml#/403-Forbidden"
      500:
        "$ref": "../responses/_index.yaml#/500-InternalServerError"
      501:
        "$ref": "../responses/_index.yaml#/501-Unimplemented"
      422:
        "$ref": "../responses/_index.yaml#/422-UnprocessableEntity"

regionID:
  parameters:
    - name: regionID
      schema:
        type: string
        pattern: "^region-[0-9a-f]{8}$"
      description: The unique region identifier
      in: path
      required: true
  get:
    description: "Gets a region."
    tags:
      - Region
    responses:
      200:
        description: "The requested region."
        content:
          application/json:
            schema:
              "$ref": "../schemas/_index.yaml#/Region"
      401:
        $ref: "../responses/_index.yaml#/401-Unauthorized"
      403:
        $ref: "../responses/_index.yaml#/403-Forbidden"
      404:
        "$ref": "../responses/_index.yaml#/404-NotFound"
      500:
        "$ref": "../responses/_index.yaml#/500-InternalServerError"
      501:
        "$ref": "../responses/_index.yaml#/501-Unimplemented"
  put:
    description: "Updates a region."
    tags:
      - Region
    requestBody:
      required: true
      content:
        application/json:
          schema:
            "$ref": "../schemas/_index.yaml#/Region"
    responses:
      200:
        description: "The region was updated."
        content:
          application/json:
            schema:
              "$ref": "../schemas/_index.yaml#/Region"
      400:
        "$ref": "../responses/_index.yaml#/400-BadRequest"
      401:
        $ref: "../responses/_index.yaml#/401-Unauthorized"
      403:
        $ref: "../responses/_index.yaml#/403-Forbidden"
      500:
        "$ref": "../responses/_index.yaml#/500-InternalServerError"
      501:
        "$ref": "../responses/_index.yaml#/501-Unimplemented"
      422:
        "$ref": "../responses/_index.yaml#/422-UnprocessableEntity"
  patch:
    description: "Partially updates a region."
    tags:
      - Region
    requestBody:
      required: true
      content:
        application/json:
          schema:
            "$ref": "../schemas/_index.yaml#/Region"
    responses:
      200:
        description: "The region was patched."
        content:
          application/json:
            schema:
              "$ref": "../schemas/_index.yaml#/Region"
      400:
        "$ref": "../responses/_index.yaml#/400-BadRequest"
      401:
        $ref: "../responses/_index.yaml#/401-Unauthorized"
      403:
        $ref: "../responses/_index.yaml#/403-Forbidden"
      409:
        "$ref": "../responses/_index.yaml#/409-Conflict"
      500:
        "$ref": "../responses/_index.yaml#/500-InternalServerError"
      501:
        "$ref": "../responses/_index.yaml#/501-Unimplemented"
      422:
        "$ref": "../responses/_index.yaml#/422-UnprocessableEntity"
  delete:
    description: "Deletes a region."
    tags:
      - Region
    responses:
      204:
        description: "The region was deleted."
      400:
        "$ref": "../responses/_index.yaml#/400-BadRequest"
      401:
        $ref: "../responses/_index.yaml#/401-Unauthorized"
      403:
        $ref: "../responses/_index.yaml#/403-Forbidden"
      404:
        "$ref": "../responses/_index.yaml#/404-NotFound"
      429:
        "$ref": "../responses/_index.yaml#/429-TooManyRequests"
      503:
        "$ref": "../responses/_index.yaml#/503-ServiceUnavailable"
      500:
        "$ref": "../responses/_index.yaml#/500-InternalServerError"
      501:
        "$ref": "../responses/_index.yaml#/501-Unimplemented"

sites:
  get:
    description: "Gets all site objects."
    parameters:
      - in: query
        name: offset
        schema:
          default: 0
          type: integer
          minimum: 0
          maximum: 10000
        description: "Index of the first item to return. This allows skipping of items."
      - in: query
        name: pageSize
        schema:
          default: 20
          type: integer
          minimum: 1
          maximum: 100
        description: "Defines the amount of items
          to be contained in a single page,
          min of 1 and max of 100, default of 20."
      - in: query
        name: filter
        schema:
          type: string
          pattern: ^$|^[a-zA-Z-_0-9.,:/=*(){}\"' ]+$
        description: "Optional filter to return only items of interest.
          See https://google.aip.dev/160 for details."
        examples:
          example1:
            value: 'region.resourceId="region-3b382a11"'
            summary: "Through site's region ID"
          example2:
            value: 'name="site name example"'
            summary: "Through site name"
          example3:
            value: "metadata='{\"key\":\"exampleKey\",\"value\":\"exampleValue\"}'"
            summary: "Through metadata"
      - in: query
        name: orderBy
        schema:
          type: string
          pattern: '^$|^[a-zA-Z-_0-9., ]+$'
        description: "Optional comma-separated list of fields to specify a sorting order.
          See https://google.aip.dev/132 for details."
      - in: query
        name: regionID
        deprecated: true
        schema:
          type: string
          pattern: "^region-[0-9a-f]{8}$|^null$"
        description: "The region ID that the sites belong to.
          If not specified, returns all sites (given the other query params).
          If specified, returns the sites that have the specified
          region ID applied to them. If null, returns all sites
          without a region ID."
      - in: query
        name: ouID
        deprecated: true
        schema:
          type: string
          pattern: "^ou-[0-9a-f]{8}$|^null$"
        description: "The OUID that the sites belong to.
          If not specified, returns all sites (given the other query parameters).
          If specified, returns the sites that have the specified
          OUID applied to them. If null, returns all sites
          without an OUID."
    tags:
      - Site
    responses:
      200:
        description: "Array of all site objects."
        content:
          application/json:
            schema:
              "$ref": "../schemas/_index.yaml#/SitesList"
      400:
        "$ref": "../responses/_index.yaml#/400-BadRequest"
      401:
        "$ref": "../responses/_index.yaml#/401-Unauthorized"
      403:
        "$ref": "../responses/_index.yaml#/403-Forbidden"
      404:
        "$ref": "../responses/_index.yaml#/404-NotFound"
      406:
        "$ref": "../responses/_index.yaml#/406-NotAcceptable"
      408:
        "$ref": "../responses/_index.yaml#/408-Timeout"
      409:
        "$ref": "../responses/_index.yaml#/409-Conflict"
      412:
        "$ref": "../responses/_index.yaml#/412-PreconditionFailed"
      422:
        "$ref": "../responses/_index.yaml#/422-UnprocessableEntity"
      429:
        "$ref": "../responses/_index.yaml#/429-TooManyRequests"
      503:
        "$ref": "../responses/_index.yaml#/503-ServiceUnavailable"
      500:
        "$ref": "../responses/_index.yaml#/500-InternalServerError"
      501:
        "$ref": "../responses/_index.yaml#/501-Unimplemented"
  post:
    description: "Creates a site."
    tags:
      - Site
    requestBody:
      required: true
      content:
        application/json:
          schema:
            "$ref": "../schemas/_index.yaml#/Site"
    responses:
      201:
        description: "The site was created."
        content:
          application/json:
            schema:
              "$ref": "../schemas/_index.yaml#/Site"
        headers:
          Location:
            description: "Contains the URI of the created site."
            required: true
            schema:
              type: string
      400:
        "$ref": "../responses/_index.yaml#/400-BadRequest"
      401:
        "$ref": "../responses/_index.yaml#/401-Unauthorized"
      403:
        "$ref": "../responses/_index.yaml#/403-Forbidden"
      404:
        "$ref": "../responses/_index.yaml#/404-NotFound"
      406:
        "$ref": "../responses/_index.yaml#/406-NotAcceptable"
      408:
        "$ref": "../responses/_index.yaml#/408-Timeout"
      409:
        "$ref": "../responses/_index.yaml#/409-Conflict"
      412:
        "$ref": "../responses/_index.yaml#/412-PreconditionFailed"
      422:
        "$ref": "../responses/_index.yaml#/422-UnprocessableEntity"
      429:
        "$ref": "../responses/_index.yaml#/429-TooManyRequests"
      503:
        "$ref": "../responses/_index.yaml#/503-ServiceUnavailable"
      500:
        "$ref": "../responses/_index.yaml#/500-InternalServerError"
      501:
        "$ref": "../responses/_index.yaml#/501-Unimplemented"

siteID:
  parameters:
    - name: siteID
      schema:
        type: string
        pattern: "^site-[0-9a-f]{8}$"
      description: "The unique site identifier."
      in: path
      required: true
  get:
    description: "Gets a site."
    tags:
      - Site
    responses:
      200:
        description: "The requested site."
        content:
          application/json:
            schema:
              "$ref": "../schemas/_index.yaml#/Site"
      400:
        "$ref": "../responses/_index.yaml#/400-BadRequest"
      401:
        "$ref": "../responses/_index.yaml#/401-Unauthorized"
      403:
        "$ref": "../responses/_index.yaml#/403-Forbidden"
      404:
        "$ref": "../responses/_index.yaml#/404-NotFound"
      406:
        "$ref": "../responses/_index.yaml#/406-NotAcceptable"
      408:
        "$ref": "../responses/_index.yaml#/408-Timeout"
      409:
        "$ref": "../responses/_index.yaml#/409-Conflict"
      412:
        "$ref": "../responses/_index.yaml#/412-PreconditionFailed"
      422:
        "$ref": "../responses/_index.yaml#/422-UnprocessableEntity"
      429:
        "$ref": "../responses/_index.yaml#/429-TooManyRequests"
      503:
        "$ref": "../responses/_index.yaml#/503-ServiceUnavailable"
      500:
        "$ref": "../responses/_index.yaml#/500-InternalServerError"
      501:
        "$ref": "../responses/_index.yaml#/501-Unimplemented"
  put:
    description: "Updates a site."
    tags:
      - Site
    requestBody:
      required: true
      content:
        application/json:
          schema:
            "$ref": "../schemas/_index.yaml#/Site"
    responses:
      200:
        description: "The site was updated."
        content:
          application/json:
            schema:
              "$ref": "../schemas/_index.yaml#/Site"
      400:
        "$ref": "../responses/_index.yaml#/400-BadRequest"
      401:
        "$ref": "../responses/_index.yaml#/401-Unauthorized"
      403:
        "$ref": "../responses/_index.yaml#/403-Forbidden"
      404:
        "$ref": "../responses/_index.yaml#/404-NotFound"
      406:
        "$ref": "../responses/_index.yaml#/406-NotAcceptable"
      408:
        "$ref": "../responses/_index.yaml#/408-Timeout"
      409:
        "$ref": "../responses/_index.yaml#/409-Conflict"
      412:
        "$ref": "../responses/_index.yaml#/412-PreconditionFailed"
      422:
        "$ref": "../responses/_index.yaml#/422-UnprocessableEntity"
      429:
        "$ref": "../responses/_index.yaml#/429-TooManyRequests"
      503:
        "$ref": "../responses/_index.yaml#/503-ServiceUnavailable"
      500:
        "$ref": "../responses/_index.yaml#/500-InternalServerError"
      501:
        "$ref": "../responses/_index.yaml#/501-Unimplemented"
  patch:
    description: "Partially updates a site."
    tags:
      - Site
    requestBody:
      required: true
      content:
        application/json:
          schema:
            "$ref": "../schemas/_index.yaml#/Site"
    responses:
      200:
        description: "The site was patched."
        content:
          application/json:
            schema:
              "$ref": "../schemas/_index.yaml#/Site"
      400:
        "$ref": "../responses/_index.yaml#/400-BadRequest"
      401:
        "$ref": "../responses/_index.yaml#/401-Unauthorized"
      403:
        "$ref": "../responses/_index.yaml#/403-Forbidden"
      404:
        "$ref": "../responses/_index.yaml#/404-NotFound"
      406:
        "$ref": "../responses/_index.yaml#/406-NotAcceptable"
      408:
        "$ref": "../responses/_index.yaml#/408-Timeout"
      409:
        "$ref": "../responses/_index.yaml#/409-Conflict"
      412:
        "$ref": "../responses/_index.yaml#/412-PreconditionFailed"
      422:
        "$ref": "../responses/_index.yaml#/422-UnprocessableEntity"
      429:
        "$ref": "../responses/_index.yaml#/429-TooManyRequests"
      503:
        "$ref": "../responses/_index.yaml#/503-ServiceUnavailable"
      500:
        "$ref": "../responses/_index.yaml#/500-InternalServerError"
      501:
        "$ref": "../responses/_index.yaml#/501-Unimplemented"
  delete:
    description: "Delete a site"
    tags:
      - Site
    responses:
      204:
        description: "The site was deleted."
      400:
        "$ref": "../responses/_index.yaml#/400-BadRequest"
      401:
        "$ref": "../responses/_index.yaml#/401-Unauthorized"
      403:
        "$ref": "../responses/_index.yaml#/403-Forbidden"
      404:
        "$ref": "../responses/_index.yaml#/404-NotFound"
      406:
        "$ref": "../responses/_index.yaml#/406-NotAcceptable"
      408:
        "$ref": "../responses/_index.yaml#/408-Timeout"
      409:
        "$ref": "../responses/_index.yaml#/409-Conflict"
      412:
        "$ref": "../responses/_index.yaml#/412-PreconditionFailed"
      422:
        "$ref": "../responses/_index.yaml#/422-UnprocessableEntity"
      429:
        "$ref": "../responses/_index.yaml#/429-TooManyRequests"
      503:
        "$ref": "../responses/_index.yaml#/503-ServiceUnavailable"
      500:
        "$ref": "../responses/_index.yaml#/500-InternalServerError"
      501:
        "$ref": "../responses/_index.yaml#/501-Unimplemented"

locations:
  get:
    description: "Gets a list of location node objects."
    parameters:
      - in: query
        name: name
        schema:
          type: string
          maxLength: 20
          pattern: "^[a-zA-Z-_0-9./: ]+$"
        description: "The name of the resource to be queried;
          it can be a region and/or site name, if the query
          parameters below are stated."
      - in: query
        name: showSites
        description: "Indicates if the filter will be applied on the site resources."
        schema:
          type: boolean
      - in: query
        name: showRegions
        description: "Indicates if the filter will be applied on the region resources."
        schema:
          type: boolean
    tags:
      - Location
    responses:
      200:
        description: "Array of the location node objects containing the
          resources that match the query name parameter.
          For each type of location, the maximum amount of resources to be returned is 20."
        content:
          application/json:
            schema:
              "$ref": "../schemas/_index.yaml#/LocationNodeList"
      400:
        $ref: "../responses/_index.yaml#/400-BadRequest"
      401:
        $ref: "../responses/_index.yaml#/401-Unauthorized"
      403:
        $ref: "../responses/_index.yaml#/403-Forbidden"
      429:
        "$ref": "../responses/_index.yaml#/429-TooManyRequests"
      503:
        "$ref": "../responses/_index.yaml#/503-ServiceUnavailable"
      500:
        "$ref": "../responses/_index.yaml#/500-InternalServerError"
      501:
        "$ref": "../responses/_index.yaml#/501-Unimplemented"
